'use strict';
import axios from 'https://cdn.jsdelivr.net/npm/axios@1.3.5/+esm';

adapter.browserDetails.browser

const DID_API = {
  "old_key": "YXV0aDB8NjVlMWM2Y2IwZGJjZGYwZGZmMThlY2EwOlVUTDJWX2RrekktVXVVYjE5TXBCdg==",
  "key": "ZmFrZV9lcmFAbWFpbC5ydQ:wq9uULBXrCIdM5VwiIje1",
  "url": "https://api.d-id.com",
  "agent_id": "agt_QxDcTvTi"
};

const api = axios.create({
    baseURL: 'https://api.d-id.com/',
    headers: {
      // 'Authorization': `Client-Key ${DID_API.key}`,
      'Authorization': `Basic ${DID_API.key}`,
      'Content-Type': 'application/json',
    }
});

if (DID_API.key == 'ü§´') alert('Please put your API key inside ./api.json and restart.');

const messages = [{
  role: 'system',
  // created_at: new Date().toISOString(),
  content: `–¢—ã –í–µ–Ω–¥–∏ - –∫–∞—Å—Å–∏—Ä —Å–µ—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è Wendy‚Äôs.

  –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
  - –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ.
  - –ï—Å–ª–∏ —Ç–µ–±—è –ø—Ä–æ—Å—è—Ç –æ –∫–æ–º–±–æ –∏–ª–∏ –æ –≥–∞–º–±—É—Ä–≥–µ—Ä–∞—Ö, –ø—Ä–µ–¥–ª–æ–∂–∏ 3 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏ –æ–∑–≤—É—á—å —á—Ç–æ –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –≤ –æ—Ç–≤–µ—Ç–µ –Ω–µ –¥–æ–ª–Ω–æ –±—ã—Ç—å –Ω—É–º–∏—Ä–∞—Ü–∏–∏. –ü—Ä–∏–º–µ—Ä: –£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–æ–º–±–æ: Wendy's –ë—É—Ä–≥–µ—Ä –∫–æ–º–±–æ, –ë–∏—Ñ—Ñ–æ–Ω–∞—Ç–æ—Ä –ö–æ–º–±–æ, –î–≤–æ–π–Ω–æ–π –ß–∏–∑–±—É—Ä–≥–µ—Ä –ö–æ–º–±–æ. –¢–∞–∫–∂–µ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–±–æ –Ω–∞ –≤—ã–±–æ—Ä. –ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?
  - –ü—Ä–∏ –æ—Ç–≤–µ—Ç–∞—Ö –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω—É–º–∏—Ä–∞—Ü–∏—è.

  –ú–µ–Ω—é:
    –°–∞–ª–∞—Ç—ã:
      - –ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 400 —Ç–µ–Ω–≥–µ
      - –ì—Ä–∏–ª—å –¶–µ–∑–∞—Ä—å –°–∞–ª–∞—Ç. –°—Ç–æ–∏–º–æ—Å—Ç—å: 2 100 —Ç–µ–Ω–≥–µ
    
    –ö–æ–º–±–æ:
      - BBQ Cheese melt Double–ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 4 000 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - BBQ Cheese melt –∫–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 3 200 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –ë–∏—Ñ—Ñ–æ–Ω–∞—Ç–æ—Ä –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 4 150 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –î–≤–æ–π–Ω–æ–π Wendy's –ë—É—Ä–≥–µ—Ä –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 3 850 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - Wendy's –ë—É—Ä–≥–µ—Ä –∫–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 3 050 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –î–∂—É–Ω–∏–æ—Ä –ë–∏—Ñ—Ñ–æ–Ω–∞—Ç–æ—Ä –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 3 100 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –î–≤–æ–π–Ω–æ–π –ß–∏–∑–±—É—Ä–≥–µ—Ä –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 2 750 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –ì—Ä–∏–ª—å –ß–∏–∫–µ–Ω –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 3 050 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –ì—Ä–∏–ª—å –ß–∏–∫–µ–Ω —Ä—ç–ø –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 3 150 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ì—Ä–∏–ª—å —á–∏–∫–µ–Ω —Ä—ç–ø 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –ö—Ä–∏—Å–ø–∏ –ß–∏–∫–µ–Ω –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 2 450 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
      - –†–∞–Ω—á –ö—Ä–∏—Å–ø–∏ –ß–∏–∫–µ–Ω –ö–æ–º–±–æ. –°—Ç–æ–∏–º–æ—Å—Ç—å: 2 650 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ë—É—Ä–≥–µ—Ä 2. –ü–æ—Ä—Ü–∏—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Ñ—Ä–∏ (–Ω–∞ –≤—ã–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∏–ª–∏ –∫—Ä—É—á–µ–Ω–∞—è) 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä 500 –º–ª
    
    –ë—É—Ä–≥–µ—Ä—ã —Å –≥–æ–≤—è–¥–∏–Ω–æ–π:
      - BBQ Cheese Melt Double. –°—Ç–æ–∏–º–æ—Å—Ç—å: 2 650 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –¥–≤–æ–π–Ω–∞—è –±–æ–ª—å—à–∞—è —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ Wendys, –ª—É–∫–æ–≤—ã–µ –∫–æ–ª—å—Ü–∞, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, —Å–æ—É—Å –±–∞—Ä–±–µ–∫—é
      - BBQ Cheese Melt. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 850 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –±–æ–ª—å—à–∞—è —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ Wendys, –ª—É–∫–æ–≤—ã–µ –∫–æ–ª—å—Ü–∞, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, —Å–æ—É—Å –±–∞—Ä–±–µ–∫—é
      - –ë–∏—Ñ—Ñ–æ–Ω–∞—Ç–æ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 2 800 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –±–æ–ª—å—à–∞—è –¥–≤–æ–π–Ω–∞—è —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ Wendy's, 6  –∫—É—Å–æ—á–∫–æ–≤ –≥–æ–≤—è–∂—å–µ–≥–æ –±–µ–∫–æ–Ω–∞, –¥–≤–æ–π–Ω–æ–π —Å—ã—Ä —á–µ–¥–¥–µ—Ä, –∫–µ—Ç—á—É–ø, –º–∞–π–æ–Ω–µ–∑
      - –î–≤–æ–π–Ω–æ–π Wendy's –ë—É—Ä–≥–µ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 2 500 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –±–æ–ª—å—à–∞—è –¥–≤–æ–π–Ω–∞—è —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ Wendy's, –¥–≤–æ–π–Ω–æ–π —Å—ã—Ä —á–µ–¥–¥–µ—Ä, –ª–∏—Å—Ç—å—è —Å–∞–ª–∞—Ç–∞ –∞–π—Å–±–µ—Ä–≥, –∫–æ–ª—å—Ü–∞ –ª—É–∫–∞, —Å–ø–µ–ª—ã–µ —Ç–æ–º–∞—Ç—ã, –ø–∏–∫—É–ª–∏, –∫–µ—Ç—á—É–ø, –º–∞–π–æ–Ω–µ–∑
      - Wendy's –ë—É—Ä–≥–µ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 700 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –±–æ–ª—å—à–∞—è —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ Weny's, –¥–≤–æ–π–Ω–æ–π —Å—ã—Ä —á–µ–¥–¥–µ—Ä, –ª–∏—Å—Ç—å—è —Å–∞–ª–∞—Ç–∞ –∞–π—Å–±–µ—Ä–≥, –∫–æ–ª—å—Ü–∞ –ª—É–∫–∞, —Å–ø–µ–ª—ã–µ —Ç–æ–º–∞—Ç—ã, –ø–∏–∫—É–ª–∏, –∫–µ—Ç—á—É–ø, –º–∞–π–æ–Ω–µ–∑
      - –î–∂—É–Ω–∏–æ—Ä –ë–∏—Ñ—Ñ–æ–Ω–∞—Ç–æ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 750 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –¥–≤–æ–π–Ω–∞—è –º–∞–ª–µ–Ω—å–∫–∞—è —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ Wendys, 4 –∫—É—Å–æ—á–∫–∞ –≥–æ–≤—è–∂—å–µ–≥–æ –±–µ–∫–æ–Ω–∞, –¥–≤–æ–π–Ω–æ–π —Å—ã—Ä —á–µ–¥–¥–µ—Ä, –º–∞–π–æ–Ω–µ–∑, –∫–µ—Ç—á—É–ø
      - –î–≤–æ–π–Ω–æ–π –ß–∏–∑–±—É—Ä–≥–µ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 400 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ë—É–ª–æ—á–∫–∞, –º–∞–ª–µ–Ω—å–∫–∞—è –¥–≤–æ–π–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞, –¥–≤–æ–π–Ω–æ–π —Å—ã—Ä —á–µ–¥–¥–µ—Ä, –∫–æ–ª—å—Ü–∞ –ª—É–∫–∞, –ø–∏–∫—É–ª–∏, –∫–µ—Ç—á—É–ø –∏ –≥–æ—Ä—á–∏—Ü–∞
      - –ß–∏–∑–±—É—Ä–≥–µ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 850 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ë—É–ª–æ—á–∫–∞, –º–∞–ª–µ–Ω—å–∫–∞—è –Ω–µ–∂–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, –∫–æ–ª—å—Ü–∞ –ª—É–∫–∞, –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏, –∫–µ—Ç—á—É–ø –∏ –≥–æ—Ä—á–∏—Ü–∞
      - –ì–∞–º–±—É—Ä–≥–µ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 750 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ë—É–ª–æ—á–∫–∞, –º–∞–ª–µ–Ω—å–∫–∞—è –Ω–µ–∂–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞, –∫–æ–ª—å—Ü–∞ –ª—É–∫–∞, –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏, –∫–µ—Ç—á—É–ø –∏ –≥–æ—Ä—á–∏—Ü–∞
      - –¢–æ—Å—Ç —Å –≥–æ–≤—è–∂—å–∏–º –±–µ–∫–æ–Ω–æ–º. –°—Ç–æ–∏–º–æ—Å—Ç—å: 650 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ë—É–ª–æ—á–∫–∞, –∫—É—Å–æ—á–∫–∏ –≥–æ–≤—è–∂—å–µ–≥–æ –±–µ–∫–æ–Ω–∞ –∏ –¥–≤–æ–π–Ω–æ–π —Å—ã—Ä —á–µ–¥–¥–µ—Ä
      - –•–∞–ª–∞–ø–µ–Ω—å–æ –±—É—Ä–≥–µ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 850 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –±–æ–ª—å—à–∞—è —Ñ–∏—Ä–º–µ–Ω–Ω–∞—è –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ Wendys, –ª—É–∫–æ–≤—ã–µ –∫–æ–ª—å—Ü–∞, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, —Å–æ—É—Å —à—Ä–∏—Ä–∞—á–∞, –ø–µ—Ä—á–∏–∫–∏ —Ö–∞–ª–∞–ø–µ–Ω—å–æ

    –ë—É—Ä–≥–µ—Ä—ã —Å –∫—É—Ä–∏—Ü–µ–π:
      - –ì—Ä–∏–ª—å —á–∏–∫–µ–Ω. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 700 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ë—É–ª–æ—á–∫–∞, –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, –ª–∏—Å—Ç—å—è —Å–∞–ª–∞—Ç–∞, –ø–æ–º–∏–¥–æ—Ä—ã –∏ —Å–ª–∞–¥–∫–∞—è –≥–æ—Ä—á–∏—Ü–∞
      - –ì—Ä–∏–ª—å —á–∏–∫–µ–Ω —Ä—ç–ø. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 800 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –¢–æ—Ä—Ç–∏–ª—å—è, –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, —Å—ã—Ä,  –ª–∏—Å—Ç—å—è —Å–∞–ª–∞—Ç–∞, –ø–æ–º–∏–¥–æ—Ä—ã –∏ —Å–ª–∞–¥–∫–∞—è –≥–æ—Ä—á–∏—Ü–∞
      - –†–∞–Ω—á –∫—Ä–∏—Å–ø–∏ —á–∏–∫–µ–Ω. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 300 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –Ω–µ–∂–Ω–∞—è –∫—É—Ä–∏–Ω–∞—è –∫–æ—Ç–ª–µ—Ç–∞, –ª–∏—Å—Ç—å—è —Å–∞–ª–∞—Ç–∞ –∞–π—Å–±–µ—Ä–≥, –ø–∏–∫—É–ª–∏, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, —Å–æ—É—Å —Ä–∞–Ω—á
      - –ö—Ä–∏—Å–ø–∏ –ß–∏–∫–µ–Ω. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 100 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞, –Ω–µ–∂–Ω–∞—è –∫—É—Ä–∏–Ω–∞—è –∫–æ—Ç–ª–µ—Ç–∞, –ª–∏—Å—Ç—å—è —Å–∞–ª–∞—Ç–∞ –∞–π—Å–±–µ—Ä–≥, –º–∞–π–æ–Ω–µ–∑
      - –ù–∞–≥–≥–µ—Ç—Å –ë—É—Ä–≥–µ—Ä. –°—Ç–æ–∏–º–æ—Å—Ç—å: 700 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ë—É–ª–æ—á–∫–∞, –∫—É—Ä–∏–Ω—ã–µ –Ω–∞–≥–≥–µ—Ç—Å—ã, –º–∞–π–æ–Ω–µ–∑, –∫–µ—Ç—á—É–ø
    
    –î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é:
      - –ì–∞–º–±—É—Ä–≥–µ—Ä –ö–∏–¥—Å –ú–∏–ª. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 700 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ì–∞–º–±—É—Ä–≥–µ—Ä 2. –ú–∞–ª–µ–Ω—å–∫–∞—è —Ñ—Ä–∏ 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä
      - –ß–∏–∑–±—É—Ä–≥–µ—Ä –ö–∏–¥—Å –ú–∏–ª. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 500 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ß–∏–∑–±—É—Ä–≥–µ—Ä 2. –ú–∞–ª–µ–Ω—å–∫–∞—è —Ñ—Ä–∏ 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä
      - –ù–∞–≥–≥–µ—Ç—Å –ë—É—Ä–≥–µ—Ä –ö–∏–¥—Å –ú–∏–ª. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 500 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ù–∞–≥–≥–µ—Ç—Å 2. –ú–∞–ª–µ–Ω—å–∫–∞—è —Ñ—Ä–∏ 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä
      - –ù–∞–≥–≥–µ—Ç—Å –ö–∏–¥—Å –ú–∏–ª. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 450 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: 1. –ß–∏–∫–µ–Ω –ù–∞–≥–≥–µ—Ç—Å (4—à—Ç) 2. –ú–∞–ª–µ–Ω—å–∫–∞—è —Ñ—Ä–∏ 3. –ù–∞–ø–∏—Ç–æ–∫ –Ω–∞ –≤—ã–±–æ—Ä

    –ó–∞–∫—É—Å–∫–∏:
      - –ö—Ä—É—á–µ–Ω–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞ XL. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 200 —Ç–µ–Ω–≥–µ
      - –ö—Ä—É—á–µ–Ω–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞ L. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 000 —Ç–µ–Ω–≥–µ
      - –ö—Ä—É—á–µ–Ω–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞ M. –°—Ç–æ–∏–º–æ—Å—Ç—å: 800 —Ç–µ–Ω–≥–µ
      - –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –§—Ä–∏ XL. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 100 —Ç–µ–Ω–≥–µ
      - –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –§—Ä–∏ L. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 100 —Ç–µ–Ω–≥–µ
      - –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –§—Ä–∏ M. –°—Ç–æ–∏–º–æ—Å—Ç—å: 900 —Ç–µ–Ω–≥–µ
      - –ë–∞—Ä–±–µ–∫—é –§—Ä–∏. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 800 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏, –≥–æ–≤—è–∂—å—è –∫–æ—Ç–ª–µ—Ç–∞ –∏ —Ö—Ä—É—Å—Ç—è—â–∏–π –≥–æ–≤—è–∂–∏–π –±–µ–∫–æ–Ω
      - –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–µ –¥–æ–ª—å–∫–∏. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 000 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–µ –¥–æ–ª—å–∫–∏, –æ–±–∂–∞—Ä–µ–Ω–Ω—ã–µ –≤–æ —Ñ—Ä–∏—Ç—é—Ä–µ
      - –ß–∏–∫–µ–Ω –ù–∞–≥–≥–µ—Ç—Å. –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 000 —Ç–µ–Ω–≥–µ. –°–æ—Å—Ç–∞–≤: –§–∏–ª–µ –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–∏ –≤ —Ö—Ä—É—Å—Ç—è—â–µ–π –ø–∞–Ω–∏—Ä–æ–≤–∫–µ
    
    –ù–∞–ø–∏—Ç–∫–∏:
      - Coca-–°ola. –°—Ç–æ–∏–º–æ—Å—Ç—å: 300 —Ç–µ–Ω–≥–µ
      - Fanta. –°—Ç–æ–∏–º–æ—Å—Ç—å: 300 —Ç–µ–Ω–≥–µ
      - Sprite. –°—Ç–æ–∏–º–æ—Å—Ç—å: 300 —Ç–µ–Ω–≥–µ
    
    –°–æ—É—Å—ã:
      - –ì–æ—Ä—è—á–∏–π —Å—ã—Ä–Ω—ã–π —Å–æ—É—Å. –°—Ç–æ–∏–º–æ—Å—Ç—å: 250 —Ç–µ–Ω–≥–µ
      - –ú–∞–π–æ–Ω–µ–∑. –°—Ç–æ–∏–º–æ—Å—Ç—å: 150 —Ç–µ–Ω–≥–µ
      - –ö–µ—Ç—á—É–ø. –°—Ç–æ–∏–º–æ—Å—Ç—å: 150 —Ç–µ–Ω–≥–µ
      - –ë–∞—Ä–±–µ–∫—é —Å–æ—É—Å. –°—Ç–æ–∏–º–æ—Å—Ç—å: 150 —Ç–µ–Ω–≥–µ
      - –†—ç–Ω—á —Å–æ—É—Å. –°—Ç–æ–∏–º–æ—Å—Ç—å: 150 —Ç–µ–Ω–≥–µ
      - –°–ª–∞–¥–∫–∞—è –ì–æ—Ä—á–∏—Ü–∞. –°—Ç–æ–∏–º–æ—Å—Ç—å: 150 —Ç–µ–Ω–≥–µ
      - –ö–∏—Å–ª–æ - —Å–ª–∞–¥–∫–∏–π —Å–æ—É—Å. –°—Ç–æ–∏–º–æ—Å—Ç—å: 150 —Ç–µ–Ω–≥–µ
      - C–∞–ª—å—Å–∞. –°—Ç–æ–∏–º–æ—Å—Ç—å: 150 —Ç–µ–Ω–≥–µ
  `,
}];

async function fetchAIResponse() {
  const response = await axios.post(`/chat`, {
      messages: messages,
  });

  if (response.status !== 200) {
    throw new Error(`Local server request failed with status ${response.status}`);
  }
  console.log(response.data)

  messages.push({
    role: response.data.message.role,
    // created_at: new Date().toISOString(),
    content: response.data.message.content,
  })

  const payload = {
    script: {
      type: 'text',
      subtitles: 'false',
      provider: {
        type: 'microsoft',
        voice_id: 'ru-RU-DariyaNeural'
      },
      ssml: 'false',
      input: response.data.message.content,
    },
    // config: {
    //   fluent: true,
    //   pad_audio: 0,
    //   driver_expressions: {
    //       expressions: [{ expression: 'neutral', start_frame: 0, intensity: 0 }],
    //       transition_frames: 0
    //   },
    //   align_driver: true,
    //   align_expand_factor: 0,
    //   auto_match: true,
    //   motion_factor: 0,
    //   normalization_factor: 0,
    //   sharpen: true,
    //   stitch: true,
    //   result_format: 'mp4'
    // },
    // 'driver_url': 'bank://lively/',
    // 'config': {
    //   'stitch': true,
    // },
    'session_id': sessionId,
    // audio_optimization: '2',
  }
  await api.post(`/talks/streams/${streamId}`, payload)
}

const RTCPeerConnection = (
  window.RTCPeerConnection ||
  window.webkitRTCPeerConnection ||
  window.mozRTCPeerConnection
).bind(window);

window.mobileCheck = function() {
  let check = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return check;
};

let peerConnection;
let streamId;
let sessionId;
let sessionClientAnswer;
let chatId;
let statsIntervalId;
let videoIsPlaying;
let lastBytesReceived;
let inputText;
let rec;

const talkVideo = document.getElementById('talk-video');
const resVideo = document.getElementById('res-video');
const peerStatusLabel = document.getElementById('peer-status-label');
const iceStatusLabel = document.getElementById('ice-status-label');
const iceGatheringStatusLabel = document.getElementById('ice-gathering-status-label');
const signalingStatusLabel = document.getElementById('signaling-status-label');
const streamingStatusLabel = document.getElementById('streaming-status-label');
const audioPlayer = document.getElementById('audioPlayer');

const recordButton = document.getElementById('record');
recordButton.onmousedown = () => {
  startRecord()
}
recordButton.onmouseup = async () => {
  if (rec && rec.state === 'recording') {
    rec.stop();
    rec.stream.getTracks().forEach(i => i.stop())
  }
}
recordButton.addEventListener('pointerdown', () => {
  startRecord()
})
recordButton.addEventListener('pointerup', () => {
  if (rec && rec.state === 'recording') {
    rec.stop();
    rec.stream.getTracks().forEach(i => i.stop())
  }
})

const startRecord = async () => {
  const audioChunks = [];

  if (navigator.mediaDevices === undefined) {
    navigator.mediaDevices = {};
  }

  if (navigator.mediaDevices.getUserMedia === undefined) {
    navigator.mediaDevices.getUserMedia = function(constraints) {
      // First get ahold of the legacy getUserMedia, if present
      let getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

      // Some browsers just don't implement it - return a rejected promise with an error
      // to keep a consistent interface
      if (!getUserMedia) {
        return Promise.reject(new Error('getUserMedia is not implemented in this browser'));
      }

      // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise
      return new Promise(function(resolve, reject) {
        getUserMedia.call(navigator, constraints, resolve, reject);
      });
    }
  }

  function handlerFunction(stream) {
    rec = new MediaRecorder(stream);
    rec.start();

    rec.ondataavailable = (e) => {
      if (e.data.size > 0) {
        audioChunks.push(e.data);
      }
    };

    rec.onstop = async () => {
      const fileName = `audio-${new Date().toISOString()}.wav`
      const blob = new Blob(audioChunks, { type: "audio/wav" });
      const audioUrl = URL.createObjectURL(blob);
      audioPlayer.src = audioUrl;
      audioPlayer.style.opacity = 0;
      audioPlayer.style.display = 'block';
      const file = new File([blob], fileName, { type:"audio/wav" })
      const formData = new FormData();
      formData.append("file", file, fileName)
      const response = await axios.post('/upload', formData)
      inputText = response.data.output.text;
      if (peerConnection?.signalingState === 'stable' || peerConnection?.iceConnectionState === 'connected') {
        messages.push({
          role: 'user',
          // created_at: new Date().toISOString(),
          content: `–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
          - –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ.
          - –ï—Å–ª–∏ —Ç–µ–±—è –ø—Ä–æ—Å—è—Ç –æ –∫–æ–º–±–æ –∏–ª–∏ –æ –≥–∞–º–±—É—Ä–≥–µ—Ä–∞—Ö, –ø—Ä–µ–¥–ª–æ–∂–∏ 3 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏ –æ–∑–≤—É—á—å —á—Ç–æ –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –≤ –æ—Ç–≤–µ—Ç–µ –Ω–µ –¥–æ–ª–Ω–æ –±—ã—Ç—å –Ω—É–º–∏—Ä–∞—Ü–∏–∏.
          - –ü—Ä–∏ –æ—Ç–≤–µ—Ç–∞—Ö –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω—É–º–∏—Ä–∞—Ü–∏—è.
          
          –ö–ª–∏–µ–Ω—Ç: ${inputText}`,
        })
        await fetchAIResponse();
      }
    }
  }

  function startusingBrowserMicrophone() {
    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {
      handlerFunction(stream);
    });
  }

  startusingBrowserMicrophone();
}

// let socket;

// const connectButton = document.getElementById('connect-button');
// connectButton.onclick = async () => {
//   if (peerConnection && peerConnection.connectionState === 'connected') {
//     return;
//   }

//   stopAllStreams();
//   closePC();

//   const sessionResponse = await api.post(`${DID_API.url}/talks/streams`, {
//       source_url
//   });

//   const { id: newStreamId, offer, ice_servers: iceServers, session_id: newSessionId } = sessionResponse.data
//   streamId = newStreamId;
//   sessionId = newSessionId;

//   try {
//     sessionClientAnswer = await createPeerConnection(offer, iceServers);
//     socket = new WebSocket(`wss://notifications.d-id.com/?authorization=Client-Key ${DID_API.key}`);
//     socket.onopen = () => {
//       console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
//     }
//   } catch (e) {
//     console.log('error during streaming setup', e);
//     stopAllStreams();
//     closePC();
//     return;
//   }

//   const sdpResponse = await api.post(`/talks/streams/${streamId}/sdp`, {
//     answer: sessionClientAnswer, session_id: sessionId
//   });

//   const responseChat = await api.post(`agents/${DID_API.agent_id}/chat`)
//   const { id: chat_id } = responseChat.data
//   chatId = chat_id
// };

async function init() {
  if (!window.mobileCheck) talkVideo.play();

  // safari hotfix
  if (talkVideo.paused) {
    talkVideo
      .play()
      .then((_) => {})
      .catch((e) => {});
  }

  if (peerConnection && peerConnection.connectionState === 'connected') {
    return;
  }

  stopAllStreams();
  closePC();

  const sessionResponse = await api.post(`${DID_API.url}/talks/streams`, {
      source_url
  });
  const { id: newStreamId, offer, ice_servers: iceServers, session_id: newSessionId } = sessionResponse.data
  streamId = newStreamId;
  sessionId = newSessionId;

  try {
    sessionClientAnswer = await createPeerConnection(offer, iceServers);
    // socket = new WebSocket(`wss://notifications.d-id.com/?authorization=Client-Key ${DID_API.key}`);
    // socket.onopen = () => {
    //   console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    // }
  } catch (e) {
    console.log('error during streaming setup', e);
    stopAllStreams();
    closePC();
    return;
  }

  const sdpResponse = await api.post(`/talks/streams/${streamId}/sdp`, {
    answer: sessionClientAnswer, session_id: sessionId
  });

  // const responseChat = await api.post(`agents/${DID_API.agent_id}/chat`)
  // const { id: chat_id } = responseChat.data
  // chatId = chat_id
}

init();

// const talkButton = document.getElementById('talk-button');
// talkButton.onclick = async () => {
//   if (peerConnection?.signalingState === 'stable' || peerConnection?.iceConnectionState === 'connected') {
//     messages.push({
//       role: 'user',
//       // created_at: new Date().toISOString(),
//       content: inputText,
//     })
//     await fetchAIResponse();
//   }
// };

// const destroyButton = document.getElementById('destroy-button');
// destroyButton.onclick = async () => {
//   await api.delete(`${DID_API.url}/talks/streams/${streamId}`, { session_id: sessionId });

//   stopAllStreams();
//   closePC();
// };

function onIceGatheringStateChange() {
  iceGatheringStatusLabel.innerText = peerConnection.iceGatheringState;
  iceGatheringStatusLabel.className = 'iceGatheringState-' + peerConnection.iceGatheringState;
}

function onIceCandidate(event) {
  console.log('onIceCandidate', event);
  if (event.candidate) {
    const { candidate, sdpMid, sdpMLineIndex } = event.candidate;

    api.post(`/talks/streams/${streamId}/ice`, {
        candidate,
        sdpMid,
        sdpMLineIndex,
        session_id: sessionId
    });
  }
}

function onIceConnectionStateChange() {
  iceStatusLabel.innerText = peerConnection.iceConnectionState;
  iceStatusLabel.className = 'iceConnectionState-' + peerConnection.iceConnectionState;
  if (peerConnection.iceConnectionState === 'failed' || peerConnection.iceConnectionState === 'closed') {
    stopAllStreams();
    closePC();
    init();
  }
}

function onConnectionStateChange() {
  peerStatusLabel.innerText = peerConnection.connectionState;
  peerStatusLabel.className = 'peerConnectionState-' + peerConnection.connectionState;
}

function onSignalingStateChange() {
  signalingStatusLabel.innerText = peerConnection.signalingState;
  signalingStatusLabel.className = 'signalingState-' + peerConnection.signalingState;
}

function onVideoStatusChange(videoIsPlaying, stream) {
  let status;
  if (videoIsPlaying) {
    status = 'streaming';
    const remoteStream = stream;
    setVideoElement(remoteStream);
  } else {
    status = 'empty';
    playIdleVideo();
  }
  streamingStatusLabel.innerText = status;
  streamingStatusLabel.className = 'streamingState-' + status;
}

function onTrack(event) {
  if (!peerConnection) return;
  if (!event || event && !event.track) return;
  console.log('onTrack', event);

  statsIntervalId = setInterval(async () => {
    const stats = await peerConnection.getStats(event.track);
    stats.forEach((report) => {
      if (report.type === 'inbound-rtp' && (report.mediaType === 'video' || report.kind === 'video')) {
        const videoStatusChanged = videoIsPlaying !== report.bytesReceived > lastBytesReceived;

        if (videoStatusChanged) {
          videoIsPlaying = report.bytesReceived > lastBytesReceived;
          onVideoStatusChange(videoIsPlaying, event.streams[0]);
        }
        lastBytesReceived = report.bytesReceived;
      }
    });
  }, 500);
}

async function createPeerConnection(offer, iceServers) {
  if (!peerConnection) {
    peerConnection = new RTCPeerConnection({ iceServers });
    peerConnection.addEventListener('icegatheringstatechange', onIceGatheringStateChange, true);
    peerConnection.addEventListener('icecandidate', onIceCandidate, true);
    peerConnection.addEventListener('iceconnectionstatechange', onIceConnectionStateChange, true);
    peerConnection.addEventListener('connectionstatechange', onConnectionStateChange, true);
    peerConnection.addEventListener('signalingstatechange', onSignalingStateChange, true);
    peerConnection.addEventListener('track', onTrack, true);
  }

  await peerConnection.setRemoteDescription(offer);
  console.log('set remote sdp OK');

  const sessionClientAnswer = await peerConnection.createAnswer();
  console.log('create local sdp OK');

  await peerConnection.setLocalDescription(sessionClientAnswer);
  console.log('set local sdp OK');

  return sessionClientAnswer;
}

function setVideoElement(stream) {
  if (!stream) return;
  talkVideo.style.opacity = 0;
  resVideo.style.opacity = 1;
  resVideo.srcObject = stream;
  console.log('streaming now')

  // safari hotfix
  if (resVideo.paused) {
    resVideo
      .play()
      .then((_) => {})
      .catch((e) => {});
  }
}

function playIdleVideo() {
  resVideo.style.opacity = 0;
  talkVideo.style.opacity = 1;
  if (talkVideo.paused) {
    talkVideo
      .play()
      .then((_) => {})
      .catch((e) => {});
  }
}

function stopAllStreams() {
  if (talkVideo.srcObject) {
    console.log('stopping video streams');
    talkVideo.srcObject.getTracks().forEach((track) => track.stop());
    talkVideo.srcObject = null;
  }
}

function closePC(pc = peerConnection) {
  if (!pc) return;
  console.log('stopping peer connection');
  pc.close();
  pc.removeEventListener('icegatheringstatechange', onIceGatheringStateChange, true);
  pc.removeEventListener('icecandidate', onIceCandidate, true);
  pc.removeEventListener('iceconnectionstatechange', onIceConnectionStateChange, true);
  pc.removeEventListener('connectionstatechange', onConnectionStateChange, true);
  pc.removeEventListener('signalingstatechange', onSignalingStateChange, true);
  pc.removeEventListener('track', onTrack, true);
  clearInterval(statsIntervalId);
  iceGatheringStatusLabel.innerText = '';
  signalingStatusLabel.innerText = '';
  iceStatusLabel.innerText = '';
  peerStatusLabel.innerText = '';
  console.log('stopped peer connection');
  if (pc === peerConnection) {
    peerConnection = null;
  }
}
